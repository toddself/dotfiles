name: Build Rust tooling

on:
  push:
    tags: 
      - '*'

jobs:
  buildTools:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      steps:
        - uses: dtolnay/rust-toolchain@master
          with:
            toolchain: stable
        - name: Build tools
          run: | 
            cargo install --root . git-delta zoxide fd-find bottom bat exa ripgrep starship stylua taplo-cli
            strip ./bin/*
        - name: Package relese
          run: |
            tar czvf rust-tools-${{ matrix.os }}.tar.gz ./bin/*
        - name: Create release
          run: |
            GIT_TAG=$(git describe --tags)
            cat <<EOF >payload.json
              {"tag_name":"v${GIT_TAG}","target_commitish":"main","name":"v${GIT_TAG}","body":"Version ${GIT_TAG}","draft":false,"prerelease":false,"generate_release_notes":false}
            EOF  
            curl -sL -X POST -H "Accept: application/vnd.github+json" \
              -H "Authoriztion: Bearer ${GITHUB_TOKEN}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/toddself/dotfiles/releases \
              -d @payload.json > response.json
        - name: Attach asset
          run: |
            RELEASE_ID=$(cat response.json | jq -r .id)
            curl -sL -X POST -H "Accept: application/vnd.github+json" \
              -H "Authoriztion: Bearer ${GITHUB_TOKEN}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -H "Content-Type: application/octet-stream" \
              https://uploads.github.com/repos/toddself/dotfiles/releases/${RELEASE_ID}/assets?name=rust-tools-${{ matrix.os }}.tar.gz \
              --data-binary "@rust-tools-${{ matrix.os }}.tar.gz" | jq .
